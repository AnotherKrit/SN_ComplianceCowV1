<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 22:00:00</entered_time>
        <max_drift/>
        <name>ComplianceCow Start NIST FOR AWS Assessment</name>
        <offset/>
        <offset_type>0</offset_type>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2024-09-09 14:49:52</run_start>
        <run_time>1970-01-02 03:00:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[try { 
	var cc_consts = new ComplianceCowConstants();

	var r = new sn_ws.RESTMessageV2(cc_consts.OUTBOUND_REST_APIS.START_ASSESSMENT.NAME, 
						cc_consts.	OUTBOUND_REST_APIS.START_ASSESSMENT.METHOD_NAME);

	r.setAuthenticationProfile('oauth2', cc_consts.OAUTH_PROFILE_ID);

	//set a MID server name if one wants to run the message on MID
	//r.setMIDServer('MY_MID_SERVER');

	//if the message is configured to communicate through ECC queue, either
	//by setting a MID server or calling executeAsync, one needs to set skip_sensor
	//to true. Otherwise, one may get an intermittent error that the response body is null
	//r.setEccParameter('skip_sensor', true);
	var gr = new GlideRecord(cc_consts.TABLES.ASSESSMENT);
	var assessmentId = cc_consts.ASSESSMENT_IDS.NIST_CSF; 
	var start_time = new GlideDateTime();
	var recExists = gr.get("id", assessmentId);
	if (recExists)
	{
		var appScopeId = gr.getValue("applicationscopeid");
		var name = gr.getValue("assessmentname") + start_time;
		var tags = gr.getValue("cctags");
		var requestbody = "{ \
           \"name\": \"" + name + "\", \
           \"description\": \"" + name + "\", \
           \"assessmentId\": \"" + assessmentId + "\", \
           \"appScopeId\": \"" + appScopeId + "\", \
           \"fromDate\": \"08/01/2024\", \
           \"toDate\": \"08/31/2024\", \
           \"tags\": \"" + tags + "\" \
       }";
   
       r.setRequestHeader("Content-Type","application/json");
       r.setRequestHeader("Accept","application/json");
       r.setRequestBody(requestbody);
   
       var response = r.execute();
       var responseBody = response.getBody();
		var httpStatusCode = response.getStatusCode();
  
		var grAssStatus = new GlideRecord(cc_consts.TABLES.ASSESSMENT_STATUS);
		grAssStatus.initialize();

		grAssStatus.setValue("assessment_id", assessmentId);
		grAssStatus.setValue("started_time", start_time );
		response_json = JSON.parse(responseBody);

		if (httpStatusCode == 200 || httpStatusCode == 201){
			grAssStatus.setValue("assessment_run_id", response_json.id);
			grAssStatus.setValue("request_status", "Started");
			//gs.debug("Assessment Started");
			//gs.debug("Assessment run id: " + response_json.id);
		}
		else {
			grAssStatus.setValue("request_status", "Failed");
			grAssStatus.setValue("response_error_message",response_json.Description);
			grAssStatus.setValue("response_status_code", httpStatusCode);
			gs.debug("Assessment Error Status code : 400 " ); //+ httpStatusCode);
			//gs.debug("Assessment Error : " + responseBody);
		}
		grAssStatus.insert();
	}
	else{
		gs.debug("Assessment record not found");
		//Workflow to generate an email
	}
		
}
catch(ex) {
 var message = ex.message;
 gs.debug(message);
}]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-09 16:19:50</sys_created_on>
        <sys_id>c5e898a5c3a096105f909e1d050131ef</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>ComplianceCow Start NIST FOR AWS Assessment</sys_name>
        <sys_package display_value="ComplianceCowV1" source="x_1507800_complian">7b1269b4c3d4d6d05f909e1d0501315c</sys_package>
        <sys_policy/>
        <sys_scope display_value="ComplianceCowV1">7b1269b4c3d4d6d05f909e1d0501315c</sys_scope>
        <sys_update_name>sysauto_script_c5e898a5c3a096105f909e1d050131ef</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-12 14:47:37</sys_updated_on>
        <time_zone>US/Eastern</time_zone>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>c5e898a5c3a096105f909e1d050131ef</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-09 16:19:50</sys_created_on>
        <sys_id>f27dacedc3a896105f909e1d05013153</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-09 16:19:50</sys_updated_on>
        <table>sysauto_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
